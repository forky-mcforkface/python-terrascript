name: Development

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  push:
  workflow_call:



jobs:
  test:
    name: Test application
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tf_version:
          - 0.12.31
          - 0.13.4
          - 0.13.5     
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
    steps:
      - name: "☁️ checkout repository"
        uses: actions/checkout@v2

      - name: "Download Terraform"
        env:
          TERRAFORM: ${{matrix.tf_version}}
        run: "(wget https://releases.hashicorp.com/terraform/${TERRAFORM}/terraform_${TERRAFORM}_linux_amd64.zip
  ; unzip terraform_${TERRAFORM}_linux_amd64.zip ; sudo install -m 755 terraform /usr/local/bin/terraform)"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
          cache-dependency-path: 'dev_requirements.txt'
      - run: pip install -r dev_requirements.txt
      - run: make test

  lint:
    name: Run Black Code Formatter
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
          cache-dependency-path: 'dev_requirements.txt'
      - run: pip install -r dev_requirements.txt
      - run: make test_black
