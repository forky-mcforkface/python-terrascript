# terrascript/resource/hetznercloud/hcloud.py
# Automatically generated by tools/makecode.py (24-Sep-2021 15:18:06 UTC)
import terrascript


class hcloud_certificate(terrascript.Resource):
    pass


class hcloud_firewall(terrascript.Resource):
    pass


class hcloud_floating_ip(terrascript.Resource):
    pass


class hcloud_floating_ip_assignment(terrascript.Resource):
    pass


class hcloud_load_balancer(terrascript.Resource):
    pass


class hcloud_load_balancer_network(terrascript.Resource):
    pass


class hcloud_load_balancer_service(terrascript.Resource):
    pass


class hcloud_load_balancer_target(terrascript.Resource):
    pass


class hcloud_managed_certificate(terrascript.Resource):
    pass


class hcloud_network(terrascript.Resource):
    pass


class hcloud_network_route(terrascript.Resource):
    pass


class hcloud_network_subnet(terrascript.Resource):
    pass


class hcloud_placement_group(terrascript.Resource):
    pass


class hcloud_rdns(terrascript.Resource):
    pass


class hcloud_server(terrascript.Resource):
    pass


class hcloud_server_network(terrascript.Resource):
    pass


class hcloud_snapshot(terrascript.Resource):
    pass


class hcloud_ssh_key(terrascript.Resource):
    pass


class hcloud_uploaded_certificate(terrascript.Resource):
    pass


class hcloud_volume(terrascript.Resource):
    pass


class hcloud_volume_attachment(terrascript.Resource):
    pass


__all__ = [
    "hcloud_certificate",
    "hcloud_firewall",
    "hcloud_floating_ip",
    "hcloud_floating_ip_assignment",
    "hcloud_load_balancer",
    "hcloud_load_balancer_network",
    "hcloud_load_balancer_service",
    "hcloud_load_balancer_target",
    "hcloud_managed_certificate",
    "hcloud_network",
    "hcloud_network_route",
    "hcloud_network_subnet",
    "hcloud_placement_group",
    "hcloud_rdns",
    "hcloud_server",
    "hcloud_server_network",
    "hcloud_snapshot",
    "hcloud_ssh_key",
    "hcloud_uploaded_certificate",
    "hcloud_volume",
    "hcloud_volume_attachment",
]
