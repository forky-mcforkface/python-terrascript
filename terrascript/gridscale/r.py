# terrascript/gridscale/r.py
# Automatically generated by tools/makecode.py ()

import warnings

warnings.warn(
    "using the 'legacy layout' is deprecated", DeprecationWarning, stacklevel=2
)
import terrascript


class gridscale_backupschedule(terrascript.Resource):
    pass


class gridscale_firewall(terrascript.Resource):
    pass


class gridscale_ipv4(terrascript.Resource):
    pass


class gridscale_ipv6(terrascript.Resource):
    pass


class gridscale_isoimage(terrascript.Resource):
    pass


class gridscale_k8s(terrascript.Resource):
    pass


class gridscale_loadbalancer(terrascript.Resource):
    pass


class gridscale_mariadb(terrascript.Resource):
    pass


class gridscale_marketplace_application(terrascript.Resource):
    pass


class gridscale_marketplace_application_import(terrascript.Resource):
    pass


class gridscale_memcached(terrascript.Resource):
    pass


class gridscale_mysql(terrascript.Resource):
    pass


class gridscale_network(terrascript.Resource):
    pass


class gridscale_object_storage_accesskey(terrascript.Resource):
    pass


class gridscale_paas(terrascript.Resource):
    pass


class gridscale_paas_securityzone(terrascript.Resource):
    pass


class gridscale_postgresql(terrascript.Resource):
    pass


class gridscale_redis_cache(terrascript.Resource):
    pass


class gridscale_redis_store(terrascript.Resource):
    pass


class gridscale_server(terrascript.Resource):
    pass


class gridscale_snapshot(terrascript.Resource):
    pass


class gridscale_snapshotschedule(terrascript.Resource):
    pass


class gridscale_sqlserver(terrascript.Resource):
    pass


class gridscale_sshkey(terrascript.Resource):
    pass


class gridscale_ssl_certificate(terrascript.Resource):
    pass


class gridscale_storage(terrascript.Resource):
    pass


class gridscale_storage_clone(terrascript.Resource):
    pass


class gridscale_storage_import(terrascript.Resource):
    pass


class gridscale_template(terrascript.Resource):
    pass
