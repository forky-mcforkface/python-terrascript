# terrascript/vra/r.py
# Automatically generated by tools/makecode.py ()

import warnings

warnings.warn(
    "using the 'legacy layout' is deprecated", DeprecationWarning, stacklevel=2
)
import terrascript


class vra_block_device(terrascript.Resource):
    pass


class vra_block_device_snapshot(terrascript.Resource):
    pass


class vra_blueprint(terrascript.Resource):
    pass


class vra_blueprint_version(terrascript.Resource):
    pass


class vra_catalog_source_blueprint(terrascript.Resource):
    pass


class vra_catalog_source_entitlement(terrascript.Resource):
    pass


class vra_cloud_account_aws(terrascript.Resource):
    pass


class vra_cloud_account_azure(terrascript.Resource):
    pass


class vra_cloud_account_gcp(terrascript.Resource):
    pass


class vra_cloud_account_nsxt(terrascript.Resource):
    pass


class vra_cloud_account_nsxv(terrascript.Resource):
    pass


class vra_cloud_account_vmc(terrascript.Resource):
    pass


class vra_cloud_account_vsphere(terrascript.Resource):
    pass


class vra_content_source(terrascript.Resource):
    pass


class vra_deployment(terrascript.Resource):
    pass


class vra_fabric_network_vsphere(terrascript.Resource):
    pass


class vra_flavor_profile(terrascript.Resource):
    pass


class vra_image_profile(terrascript.Resource):
    pass


class vra_load_balancer(terrascript.Resource):
    pass


class vra_machine(terrascript.Resource):
    pass


class vra_network(terrascript.Resource):
    pass


class vra_network_ip_range(terrascript.Resource):
    pass


class vra_network_profile(terrascript.Resource):
    pass


class vra_project(terrascript.Resource):
    pass


class vra_storage_profile(terrascript.Resource):
    pass


class vra_storage_profile_aws(terrascript.Resource):
    pass


class vra_storage_profile_azure(terrascript.Resource):
    pass


class vra_storage_profile_vsphere(terrascript.Resource):
    pass


class vra_zone(terrascript.Resource):
    pass
